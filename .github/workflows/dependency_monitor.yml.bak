name: Dependency Vulnerability Monitor
on:
  schedule:
    - cron: '0 8 * * *'  # 每天UTC时间8点运行
  workflow_dispatch:     # 允许手动触发

jobs:
  dependency-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install security scanners
        run: |
          pip install --cache-dir .pip-cache safety pip-audit
          
      - name: Run dependency scan
        run: |
          echo "=== Safety Check ==="
          safety check --full-report --output safety_report.json
          
          echo "=== Pip Audit ==="
          pip-audit --format json --output pip_audit_report.json
          
          echo "=== Analyzing Results ==="
          python tools/analyze_vulnerabilities.py safety_report.json pip_audit_report.json
          
      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: dependency-reports
          path: |
            safety_report.json
            pip_audit_report.json
            
      - name: Notify on critical vulnerabilities
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            try {
              const report = fs.readFileSync('safety_report.json', 'utf8');
              const criticalVulns = JSON.parse(report).vulnerabilities.filter(
                v => v.severity === 'CRITICAL'
              );
              
              if (criticalVulns.length > 0) {
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `🚨 发现 ${criticalVulns.length} 个关键依赖漏洞，请立即处理！\n` +
                        `详情见: ${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`
                });
              }
            } catch (e) {
              console.error('通知发送失败:', e);
            }